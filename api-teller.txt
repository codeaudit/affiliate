统一说明
返回json object结构统一为：
成功：{"code":0, "data":object}
失败：{"code":1,"errmsg":"errmsg","data":object}

1.1 /api/all-cryptocurrency-type/
无参数
返回json object, data属性为对象数组（即map）, key为加密数字货币简称，value为完整名称

1.2 /api/generate-address/
使用application/x-www-form-urlencoded方式提交数据，两个参数，currencyType是数字货币简称，size是生成地址数量
返回json object, data为字符串数组

1.3 /api/query-address-balance/
使用application/json方式提交数据，提交json object两个属性，currencyType是数字货币简称，address是字符串数组
返回json object, data为对象，结构参考以下golang结构(未来可能微调)：
type AddressBalance struct{
	Address string
	Balance float64
	LastUpdatedTimestamp uint64
	LastUpdatedTransactionId string		
}

1.4 /api/send-coin/
使用application/json方式提交数据，提交json object为以下golang结构数组：
type SendCoinInfo struct{
	Address string
	Amount uint64
}
返回json object, code为0表示成功



--------以下是golang接口版本-----
//AllCryptocurrencyType give all Cryptocurrency Type, return map key is short name, map value is full name
func AllCryptocurrencyType() map[string]string

//GenerateAddress generate a batch of digital currency address, currencyType is BTC, ETH etc, size is batch size
func GenerateAddress(currencyType String, size uint32) []string

//AddressBalance BTC, ETH etc account balance and last updated timestamp and transaction id
type AddressBalance struct{
	Address string
	Balance float64
	LastUpdatedTimestamp uint64
	LastUpdatedTransactionId string		
}

//QueryAddressBalance get BTC, ETH etc account balance
func QueryAddressBalance(currencyType String, address ...string) []AddressBalance

type SendCoinInfo struct{
	Address string
	Amount uint64
}

//SendCoin transfer coin and reward to address
func SendCoin(addrAndAmount []SendCoinInfo)
